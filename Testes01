import pandas as pd
import itertools
import os

# Dados fixos por categoria
categoria_dados = {
    "necessaries": (0.2, 9, 18, 28),
    "Carteiras e porta cartões": (0.2, 8, 14, 20),
    "luvas": (0.2, 8, 14, 20),
    "chapéus": (0.2, 8, 14, 20),
    "Cintos": (0.1, 8, 14, 20),
    "Frasqueiras": (2, 32, 36, 37),
    "malas de viagem": (2, 32, 36, 37),
    "sacolas de viagem": (2, 32, 36, 37),
    "Bolsas femininas": (1, 15, 25, 35),
    "jaquetas": (1, 15, 25, 35),
    "outras categorias": (1, 15, 25, 35),
    "casacos": (1, 15, 25, 35),
    "camisas": (1, 15, 25, 35),
    "blazer": (1, 15, 25, 35),
    "calças e saias": (1, 15, 25, 35),
    "calçados femininos": (1, 15, 25, 35),
    "calçados masculinos": (1, 15, 25, 35),
    "botas femininas": (1, 15, 25, 35),
    "tênis femininos": (1, 15, 25, 35),
}

def gerar_planilha_completa(path_entrada, path_saida):
    df = pd.read_excel(path_entrada)
    linhas = []

    for _, row in df.iterrows():
        codigo_pai = row['Código']
        nome_produto = row['Nome']
        categoria = row['Categoria']
        ncm = row['NCM']
        preco = row['Preço']
        estoque = row['Estoque']
        preco_custo = row['Preço de custo']
        fornecedor = row['Fornecedor']
        cod_forn = row['Cód. no fornecedor'] if 'Cód. no fornecedor' in row else ''
        tamanhos = [t.strip() for t in row['Tamanhos'].split(',')]
        cores = [c.strip() for c in row['Cores'].split(',')]

        peso, largura, altura, profundidade = categoria_dados.get(categoria, (0, 0, 0, 0))

        # Produto pai
        linhas.append([
            '', codigo_pai, nome_produto, ncm, 0, preco, '', '', 'Ativo', estoque, preco_custo,
            cod_forn, fornecedor, '', 0, 0, peso, peso, '', '', largura, altura, profundidade,
            '', '', '', 1, '', 'Terceiros', '', '', 'Mercadoria', '', '', 0,
            'Unnamed37', 'Unnamed38', 'Unnamed39', 0, '', 0, '', '', '', 'NÃO',
            'NOVO', 'NÃO', '', '', '', 'Centímetro', '', 0, 0, 0, categoria, ''
        ])

        for cor, tamanho in itertools.product(cores, tamanhos):
            cod_var = f"{codigo_pai}-{cor}-{tamanho}"
            desc_var = f"Tamanho:{tamanho};Cor:{cor}"
            linhas.append([
                '', cod_var, desc_var, ncm, 0, preco, '', '', 'Ativo', estoque, preco_custo,
                cod_forn, fornecedor, '', 0, 0, peso, peso, '', '', largura, altura, profundidade,
                '', '', '', 1, '', 'Terceiros', '', '', 'Mercadoria', '', codigo_pai, 0,
                'Unnamed37', 'Unnamed38', 'Unnamed39', 0, '', 0, '', '', '', 'SIM',
                'NOVO', 'NÃO', '', '', '', 'Centímetro', '', 0, 0, 0, categoria, ''
            ])

    colunas = [
        'ID', 'Código', 'Descrição', 'NCM', 'origem', 'preço', 'Valor IPI fixo', 'Observações',
        'situação', 'estoque', 'preço de custo', 'Cód. no fornecedor', 'fornecedor', 'localização',
        'Estoque máximo', 'Estoque mínimo', 'Peso líquido (kg)', 'Peso bruto (kg)',
        'GTI/EAN', 'GTI/EAN da embalagem', 'Largura do produto', 'Altura do produto',
        'Profundidade do produto', 'Data validade', 'Descrição do produto no', 'Descrição complementar',
        'Itens p/caixa', 'Produto variação', 'Tipo produção', 'Classe de enquadramento do IPI',
        'Código na lista de serviços', 'Tipo do item', 'Grupo de tags', 'Código pai', 'Código integração',
        'Unnamed37', 'Unnamed38', 'Unnamed39', 'volumes', 'Unnamed41', 'Cross-Docking',
        'URL Imagens Externas', 'Link Externo', 'Meses Garantia no Fornecedor', 'Clonar dados do pai',
        'Condição do produto', 'Frete grátis', 'Número FCI', 'Vídeo', 'Departamento',
        'Unidade de medida', 'Preço de compra', 'Valor base ICMS ST para retenção',
        'Valor ICMS ST para retenção', 'Valor ICMS próprio do substituto', 'Categoria do Produto',
        'Informações adicionais'
    ]

    df_final = pd.DataFrame(linhas, columns=colunas)
    df_final.to_excel(path_saida, index=False)

# Exemplo de uso
entrada = "entrada_cliente.xlsx"  # o cliente preenche esse arquivo com: Código, Nome, Categoria, NCM, Preço, Estoque, Preço de custo, Fornecedor, Cód. no fornecedor (opcional), Tamanhos, Cores
saida = "planilha_completa_gerada.xlsx"
gerar_planilha_completa(entrada, saida)
print("Planilha completa gerada com sucesso!")
